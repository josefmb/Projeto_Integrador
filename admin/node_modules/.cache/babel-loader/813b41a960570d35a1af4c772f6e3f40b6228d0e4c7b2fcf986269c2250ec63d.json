{"ast":null,"code":"import { useState } from 'react';\nimport useFocusManagerBase from '@restart/hooks/useFocusManager';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMounted from '@restart/hooks/useMounted';\nimport matches from 'dom-helpers/matches';\nconst isInDisabledFieldset = node => {\n  return !!node && matches(node, 'fieldset[disabled] *');\n};\nexport default function useFocusManager(ref) {\n  let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const isMounted = useMounted();\n  const [focused, setFocus] = useState(false);\n  const isDisabled = useEventCallback(() => props.disabled === true || isInDisabledFieldset(ref.current));\n  const events = useFocusManagerBase(Object.assign({}, opts, {\n    isDisabled,\n    onChange: focused => {\n      if (isMounted()) setFocus(focused);\n    },\n    didHandle(focused, event) {\n      let handler = props[focused ? 'onFocus' : 'onBlur'];\n      if (handler) handler(event); // @ts-ignore used by work\n\n      if (opts.didHandle && !event.isWidgetDefaultPrevented) opts.didHandle(focused, event);\n    }\n  }));\n  return [events, focused, setFocus];\n}","map":{"version":3,"names":["useState","useFocusManagerBase","useEventCallback","useMounted","matches","isInDisabledFieldset","node","useFocusManager","ref","props","arguments","length","undefined","opts","isMounted","focused","setFocus","isDisabled","disabled","current","events","Object","assign","onChange","didHandle","event","handler","isWidgetDefaultPrevented"],"sources":["C:/Users/josef/OneDrive/Área de Trabalho/IFSC/PI/e-commerce/node_modules/react-widgets/esm/useFocusManager.js"],"sourcesContent":["import { useState } from 'react';\nimport useFocusManagerBase from '@restart/hooks/useFocusManager';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMounted from '@restart/hooks/useMounted';\nimport matches from 'dom-helpers/matches';\n\nconst isInDisabledFieldset = node => {\n  return !!node && matches(node, 'fieldset[disabled] *');\n};\n\nexport default function useFocusManager(ref, props = {}, opts = {}) {\n  const isMounted = useMounted();\n  const [focused, setFocus] = useState(false);\n  const isDisabled = useEventCallback(() => props.disabled === true || isInDisabledFieldset(ref.current));\n  const events = useFocusManagerBase(Object.assign({}, opts, {\n    isDisabled,\n    onChange: focused => {\n      if (isMounted()) setFocus(focused);\n    },\n\n    didHandle(focused, event) {\n      let handler = props[focused ? 'onFocus' : 'onBlur'];\n      if (handler) handler(event); // @ts-ignore used by work\n\n      if (opts.didHandle && !event.isWidgetDefaultPrevented) opts.didHandle(focused, event);\n    }\n\n  }));\n  return [events, focused, setFocus];\n}"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,mBAAmB,MAAM,gCAAgC;AAChE,OAAOC,gBAAgB,MAAM,iCAAiC;AAC9D,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,OAAO,MAAM,qBAAqB;AAEzC,MAAMC,oBAAoB,GAAGC,IAAI,IAAI;EACnC,OAAO,CAAC,CAACA,IAAI,IAAIF,OAAO,CAACE,IAAI,EAAE,sBAAsB,CAAC;AACxD,CAAC;AAED,eAAe,SAASC,eAAeA,CAACC,GAAG,EAAyB;EAAA,IAAvBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,IAAEG,IAAI,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAChE,MAAMI,SAAS,GAAGX,UAAU,EAAE;EAC9B,MAAM,CAACY,OAAO,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMiB,UAAU,GAAGf,gBAAgB,CAAC,MAAMO,KAAK,CAACS,QAAQ,KAAK,IAAI,IAAIb,oBAAoB,CAACG,GAAG,CAACW,OAAO,CAAC,CAAC;EACvG,MAAMC,MAAM,GAAGnB,mBAAmB,CAACoB,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAET,IAAI,EAAE;IACzDI,UAAU;IACVM,QAAQ,EAAER,OAAO,IAAI;MACnB,IAAID,SAAS,EAAE,EAAEE,QAAQ,CAACD,OAAO,CAAC;IACpC,CAAC;IAEDS,SAASA,CAACT,OAAO,EAAEU,KAAK,EAAE;MACxB,IAAIC,OAAO,GAAGjB,KAAK,CAACM,OAAO,GAAG,SAAS,GAAG,QAAQ,CAAC;MACnD,IAAIW,OAAO,EAAEA,OAAO,CAACD,KAAK,CAAC,CAAC,CAAC;;MAE7B,IAAIZ,IAAI,CAACW,SAAS,IAAI,CAACC,KAAK,CAACE,wBAAwB,EAAEd,IAAI,CAACW,SAAS,CAACT,OAAO,EAAEU,KAAK,CAAC;IACvF;EAEF,CAAC,CAAC,CAAC;EACH,OAAO,CAACL,MAAM,EAAEL,OAAO,EAAEC,QAAQ,CAAC;AACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}