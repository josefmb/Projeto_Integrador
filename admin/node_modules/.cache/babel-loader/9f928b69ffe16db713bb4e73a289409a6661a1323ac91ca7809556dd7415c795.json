{"ast":null,"code":"/* eslint-disable @typescript-eslint/consistent-type-assertions */\nimport warning from 'tiny-warning';\nexport function toItemArray(a) {\n  if (Array.isArray(a)) return a;\n  return [];\n}\nexport const makeArray = function (obj) {\n  let excludeNull = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  const result = [];\n  return excludeNull ? obj == null ? result : result.concat(obj) : result.concat(obj);\n};\nexport const has = (o, key) => o ? Object.prototype.hasOwnProperty.call(o, key) : false;\nexport function chunk(array, chunkSize) {\n  let index = 0;\n  let length = array ? array.length : 0;\n  let result = [];\n  chunkSize = Math.max(+chunkSize || 1, 1);\n  while (index < length) result.push(array.slice(index, index += chunkSize));\n  return result;\n}\nexport function groupBySortedKeys(groupBy, data) {\n  let _keys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  const iter = typeof groupBy === 'function' ? groupBy : item => item[groupBy];\n  warning(typeof groupBy !== 'string' || !data.length || has(data[0], groupBy), `[React Widgets] You seem to be trying to group this list by a ` + `property \\`${groupBy}\\` that doesn't exist in the dataset items, this may be a typo`);\n  const groups = new Map();\n  data.forEach(item => {\n    let group = iter(item);\n    if (groups.has(group)) groups.get(group).push(item);else groups.set(group, [item]);\n  });\n  return Array.from(groups);\n}","map":{"version":3,"names":["warning","toItemArray","a","Array","isArray","makeArray","obj","excludeNull","arguments","length","undefined","result","concat","has","o","key","Object","prototype","hasOwnProperty","call","chunk","array","chunkSize","index","Math","max","push","slice","groupBySortedKeys","groupBy","data","_keys","iter","item","groups","Map","forEach","group","get","set","from"],"sources":["C:/Users/josef/OneDrive/Área de Trabalho/IFSC/PI/e-commerce/node_modules/react-widgets/esm/_.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/consistent-type-assertions */\nimport warning from 'tiny-warning';\nexport function toItemArray(a) {\n  if (Array.isArray(a)) return a;\n  return [];\n}\nexport const makeArray = (obj, excludeNull = true) => {\n  const result = [];\n  return excludeNull ? obj == null ? result : result.concat(obj) : result.concat(obj);\n};\nexport const has = (o, key) => o ? Object.prototype.hasOwnProperty.call(o, key) : false;\nexport function chunk(array, chunkSize) {\n  let index = 0;\n  let length = array ? array.length : 0;\n  let result = [];\n  chunkSize = Math.max(+chunkSize || 1, 1);\n\n  while (index < length) result.push(array.slice(index, index += chunkSize));\n\n  return result;\n}\nexport function groupBySortedKeys(groupBy, data, _keys = []) {\n  const iter = typeof groupBy === 'function' ? groupBy : item => item[groupBy];\n  warning(typeof groupBy !== 'string' || !data.length || has(data[0], groupBy), `[React Widgets] You seem to be trying to group this list by a ` + `property \\`${groupBy}\\` that doesn't exist in the dataset items, this may be a typo`);\n  const groups = new Map();\n  data.forEach(item => {\n    let group = iter(item);\n    if (groups.has(group)) groups.get(group).push(item);else groups.set(group, [item]);\n  });\n  return Array.from(groups);\n}"],"mappings":"AAAA;AACA,OAAOA,OAAO,MAAM,cAAc;AAClC,OAAO,SAASC,WAAWA,CAACC,CAAC,EAAE;EAC7B,IAAIC,KAAK,CAACC,OAAO,CAACF,CAAC,CAAC,EAAE,OAAOA,CAAC;EAC9B,OAAO,EAAE;AACX;AACA,OAAO,MAAMG,SAAS,GAAG,SAAAA,CAACC,GAAG,EAAyB;EAAA,IAAvBC,WAAW,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAC/C,MAAMG,MAAM,GAAG,EAAE;EACjB,OAAOJ,WAAW,GAAGD,GAAG,IAAI,IAAI,GAAGK,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACN,GAAG,CAAC,GAAGK,MAAM,CAACC,MAAM,CAACN,GAAG,CAAC;AACrF,CAAC;AACD,OAAO,MAAMO,GAAG,GAAGA,CAACC,CAAC,EAAEC,GAAG,KAAKD,CAAC,GAAGE,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACL,CAAC,EAAEC,GAAG,CAAC,GAAG,KAAK;AACvF,OAAO,SAASK,KAAKA,CAACC,KAAK,EAAEC,SAAS,EAAE;EACtC,IAAIC,KAAK,GAAG,CAAC;EACb,IAAId,MAAM,GAAGY,KAAK,GAAGA,KAAK,CAACZ,MAAM,GAAG,CAAC;EACrC,IAAIE,MAAM,GAAG,EAAE;EACfW,SAAS,GAAGE,IAAI,CAACC,GAAG,CAAC,CAACH,SAAS,IAAI,CAAC,EAAE,CAAC,CAAC;EAExC,OAAOC,KAAK,GAAGd,MAAM,EAAEE,MAAM,CAACe,IAAI,CAACL,KAAK,CAACM,KAAK,CAACJ,KAAK,EAAEA,KAAK,IAAID,SAAS,CAAC,CAAC;EAE1E,OAAOX,MAAM;AACf;AACA,OAAO,SAASiB,iBAAiBA,CAACC,OAAO,EAAEC,IAAI,EAAc;EAAA,IAAZC,KAAK,GAAAvB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACzD,MAAMwB,IAAI,GAAG,OAAOH,OAAO,KAAK,UAAU,GAAGA,OAAO,GAAGI,IAAI,IAAIA,IAAI,CAACJ,OAAO,CAAC;EAC5E7B,OAAO,CAAC,OAAO6B,OAAO,KAAK,QAAQ,IAAI,CAACC,IAAI,CAACrB,MAAM,IAAII,GAAG,CAACiB,IAAI,CAAC,CAAC,CAAC,EAAED,OAAO,CAAC,EAAG,gEAA+D,GAAI,cAAaA,OAAQ,gEAA+D,CAAC;EACvO,MAAMK,MAAM,GAAG,IAAIC,GAAG,EAAE;EACxBL,IAAI,CAACM,OAAO,CAACH,IAAI,IAAI;IACnB,IAAII,KAAK,GAAGL,IAAI,CAACC,IAAI,CAAC;IACtB,IAAIC,MAAM,CAACrB,GAAG,CAACwB,KAAK,CAAC,EAAEH,MAAM,CAACI,GAAG,CAACD,KAAK,CAAC,CAACX,IAAI,CAACO,IAAI,CAAC,CAAC,KAAKC,MAAM,CAACK,GAAG,CAACF,KAAK,EAAE,CAACJ,IAAI,CAAC,CAAC;EACpF,CAAC,CAAC;EACF,OAAO9B,KAAK,CAACqC,IAAI,CAACN,MAAM,CAAC;AAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}