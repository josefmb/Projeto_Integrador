{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userListReducer, userLoginReducer, userCreateReducer, userDeleteReducer, userEditReducer, userUpdateReducer } from \"./reducers/userReducers\";\nimport { productCreateReducer, productDeleteReducer, productEditReducer, productListReducer, productUpdateReducer } from \"./reducers/productReducer\";\nimport { warehouseCreateReducer, warehouseEditReducer, warehouseUpdateReducer } from \"./reducers/warehouseReducer\";\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userList: userListReducer,\n  userCreate: userCreateReducer,\n  userDelete: userDeleteReducer,\n  userEdit: userEditReducer,\n  userUpdate: userUpdateReducer,\n  productList: productListReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productEdit: productEditReducer,\n  productUpdate: productUpdateReducer,\n  warehouseCreate: warehouseCreateReducer,\n  warehouseEdit: warehouseEditReducer,\n  warehouseUpdate: warehouseUpdateReducer\n});\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromLocalStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userListReducer","userLoginReducer","userCreateReducer","userDeleteReducer","userEditReducer","userUpdateReducer","productCreateReducer","productDeleteReducer","productEditReducer","productListReducer","productUpdateReducer","warehouseCreateReducer","warehouseEditReducer","warehouseUpdateReducer","reducer","userLogin","userList","userCreate","userDelete","userEdit","userUpdate","productList","productDelete","productCreate","productEdit","productUpdate","warehouseCreate","warehouseEdit","warehouseUpdate","userInfoFromLocalStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"sources":["C:/Users/josef/OneDrive/√Årea de Trabalho/IFSC/PI/e-commerce/admin/src/redux/store.jsx"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { \r\n  userListReducer, \r\n  userLoginReducer, \r\n  userCreateReducer,\r\n  userDeleteReducer, \r\n  userEditReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n  productCreateReducer,\r\n  productDeleteReducer,\r\n  productEditReducer,\r\n  productListReducer,\r\n  productUpdateReducer,\r\n} from \"./reducers/productReducer\";\r\n\r\nimport { \r\n  warehouseCreateReducer,\r\n  warehouseEditReducer,\r\n  warehouseUpdateReducer,\r\n} from \"./reducers/warehouseReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userList: userListReducer,\r\n  userCreate: userCreateReducer,\r\n  userDelete: userDeleteReducer,\r\n  userEdit: userEditReducer,\r\n  userUpdate: userUpdateReducer,\r\n  productList: productListReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productEdit: productEditReducer,\r\n  productUpdate: productUpdateReducer,\r\n  warehouseCreate: warehouseCreateReducer,\r\n  warehouseEdit: warehouseEditReducer,\r\n  warehouseUpdate: warehouseUpdateReducer,\r\n});\r\n\r\n\r\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromLocalStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SACEC,eAAe,EACfC,gBAAgB,EAChBC,iBAAiB,EACjBC,iBAAiB,EACjBC,eAAe,EACfC,iBAAiB,QACZ,yBAAyB;AAChC,SACEC,oBAAoB,EACpBC,oBAAoB,EACpBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,QACf,2BAA2B;AAElC,SACEC,sBAAsB,EACtBC,oBAAoB,EACpBC,sBAAsB,QACjB,6BAA6B;AAEpC,MAAMC,OAAO,GAAGlB,eAAe,CAAC;EAC9BmB,SAAS,EAAEd,gBAAgB;EAC3Be,QAAQ,EAAEhB,eAAe;EACzBiB,UAAU,EAAEf,iBAAiB;EAC7BgB,UAAU,EAAEf,iBAAiB;EAC7BgB,QAAQ,EAAEf,eAAe;EACzBgB,UAAU,EAAEf,iBAAiB;EAC7BgB,WAAW,EAAEZ,kBAAkB;EAC/Ba,aAAa,EAAEf,oBAAoB;EACnCgB,aAAa,EAAEjB,oBAAoB;EACnCkB,WAAW,EAAEhB,kBAAkB;EAC/BiB,aAAa,EAAEf,oBAAoB;EACnCgB,eAAe,EAAEf,sBAAsB;EACvCgB,aAAa,EAAEf,oBAAoB;EACnCgB,eAAe,EAAEf;AACnB,CAAC,CAAC;AAGF,MAAMgB,wBAAwB,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GAC7DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;AAER,MAAMG,YAAY,GAAG;EACnBnB,SAAS,EAAE;IAAEoB,QAAQ,EAAEN;EAAyB;AAClD,CAAC;AAED,MAAMO,UAAU,GAAG,CAACtC,KAAK,CAAC;AAE1B,MAAMuC,KAAK,GAAG1C,WAAW,CACvBmB,OAAO,EACPoB,YAAY,EACZnC,mBAAmB,CAACF,eAAe,CAAC,GAAGuC,UAAU,CAAC,CAAC,CACpD;AAED,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}